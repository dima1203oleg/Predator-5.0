import os
import sys
import subprocess
from pathlib import Path

def check_git_remote():
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å Git remote"""
    try:
        result = subprocess.run(
            ['git', 'remote', '-v'],
            capture_output=True,
            text=True
        )
        
        if result.returncode != 0:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è Git remote")
            return False
            
        remotes = result.stdout.strip()
        if not remotes:
            print("‚ùå –í—ñ–¥–¥–∞–ª–µ–Ω—ñ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ")
            return False
            
        print("‚úÖ Git remote –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:")
        print(remotes)
        return True
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ Git: {str(e)}")
        return False

def check_github_auth():
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó GitHub"""
    try:
        result = subprocess.run(
            ['gh', 'auth', 'status'],
            capture_output=True,
            text=True
        )
        
        if result.returncode != 0:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó GitHub")
            print(result.stderr)
            return False
            
        print("‚úÖ GitHub –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∞–∫—Ç–∏–≤–Ω–∞:")
        print(result.stdout.strip())
        return True
            
    except FileNotFoundError:
        print("‚ùå GitHub CLI (gh) –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        return False
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ GitHub: {str(e)}")
        return False

def main():
    print("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å Git —Ç–∞ GitHub...\n")
    
    git_ok = check_git_remote()
    gh_ok = check_github_auth()
    
    if git_ok and gh_ok:
        print("\n‚úÖ –í—Å—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ—Ä–µ–∫—Ç–Ω—ñ")
        sys.exit(0)
    else:
        print("\n‚ùå –í–∏—è–≤–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏")
        sys.exit(1)

if __name__ == '__main__':
    main()
