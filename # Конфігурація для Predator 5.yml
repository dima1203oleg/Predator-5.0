# Конфігурація для Predator 5.0 Chart

replicaCount:
  apiserver: 1
  worker: 2
  frontend: 1

image:
  repository: predator5
  tag: latest
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 80
  targetPort: 8000

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: api.predator.io
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: predator-tls
      hosts:
        - api.predator.io

resources:
  apiserver:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 500m
      memory: 512Mi
  worker:
    limits:
      cpu: 2000m
      memory: 2048Mi
    requests:
      cpu: 1000m
      memory: 1024Mi
  frontend:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

environment:
  debug: false
  adminEmail: admin@predator.io

database:
  host: postgresql
  port: 5432
  user: postgres
  database: predator
  existingSecret: predator-db-credentials

redis:
  host: redis
  port: 6379

opensearch:
  host: opensearch
  port: 9200

monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 15s
    scrapeTimeout: 10s
    labels:
      release: prometheus

serviceAccount:
  create: true
  name: "predator-sa"
