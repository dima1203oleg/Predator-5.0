apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-worker
  labels:
    app: {{ .Release.Name }}-worker
    {{- include "predator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount.worker }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-worker
      {{- include "predator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-worker
        {{- include "predator.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "predator.serviceAccountName" . }}
      containers:
        - name: worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["celery", "-A", "predator", "worker", "--loglevel=info"]
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-config
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret }}
                  key: password
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: secret-key
          livenessProbe:
            exec:
              command:
                - celery
                - -A
                - predator
                - inspect
                - ping
                - --destination=celery@$HOSTNAME
            initialDelaySeconds: 60
            periodSeconds: 30
          resources:
            {{- toYaml .Values.resources.worker | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
