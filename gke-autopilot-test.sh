#!/bin/bash

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}=======================================================================================${NC}"
echo -e "${GREEN}üöÄ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Google Cloud Next 2025 Free Kubernetes${NC}"
echo -e "${BLUE}=======================================================================================${NC}"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫–ª–∞—Å—Ç–µ—Ä–∞
echo -e "${YELLOW}–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ Kubernetes-–∫–ª–∞—Å—Ç–µ—Ä–∞:${NC}"
gcloud container clusters list
if [ $? -ne 0 ] || [ -z "$(gcloud container clusters list 2>/dev/null)" ]; then
  echo -e "${RED}–ü–æ–º–∏–ª–∫–∞! –ö–ª–∞—Å—Ç–µ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.${NC}"
  echo -e "${YELLOW}–°—Ç–≤–æ—Ä—ñ—Ç—å –∫–ª–∞—Å—Ç–µ—Ä –∫–æ–º–∞–Ω–¥–æ—é:${NC}"
  echo "gcloud container clusters create-auto predator-cluster --region us-central1"
  exit 1
fi

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –æ–±–ª—ñ–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
echo -e "${YELLOW}–û—Ç—Ä–∏–º–∞–Ω–Ω—è –æ–±–ª—ñ–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –∫–ª–∞—Å—Ç–µ—Ä–∞:${NC}"
CLUSTER_NAME=$(gcloud container clusters list --format="value(name)" | head -n 1)
CLUSTER_REGION=$(gcloud container clusters list --format="value(location)" | head -n 1)
gcloud container clusters get-credentials $CLUSTER_NAME --region $CLUSTER_REGION
if [ $? -ne 0 ]; then
  echo -e "${RED}–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ –∫–ª–∞—Å—Ç–µ—Ä–∞.${NC}"
  exit 1
fi
echo -e "${GREEN}‚úÖ –£—Å–ø—ñ—à–Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –∫–ª–∞—Å—Ç–µ—Ä–∞ ${CLUSTER_NAME}${NC}"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –≤—É–∑–ª—ñ–≤
echo -e "${YELLOW}–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –≤—É–∑–ª—ñ–≤:${NC}"
kubectl get nodes
if [ $? -ne 0 ]; then
  echo -e "${RED}–ù–µ–º–æ–∂–ª–∏–≤–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—É–∑–ª–∏.${NC}"
  exit 1
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ä–µ—Å—É—Ä—Å—ñ–≤
echo -e "${YELLOW}–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ä–µ—Å—É—Ä—Å—ñ–≤:${NC}"
if command -v kubectl-top &> /dev/null; then
  kubectl top nodes
else
  echo -e "${YELLOW}kubectl top –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å pod-—ñ–≤${NC}"
  kubectl get pods -A
fi

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Å—Ç–æ—Ä—É —ñ–º–µ–Ω –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
echo -e "${YELLOW}–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Å—Ç–æ—Ä—É —ñ–º–µ–Ω next-test –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:${NC}"
kubectl create namespace next-test
if [ $? -ne 0 ]; then
  echo -e "${YELLOW}–ü—Ä–æ—Å—Ç—ñ—Ä —ñ–º–µ–Ω –≤–∂–µ —ñ—Å–Ω—É—î, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ${NC}"
fi

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
kubectl config set-context --current --namespace=next-test

# –†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É
echo -e "${YELLOW}–†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É:${NC}"
cat > test-deployment.yaml << EOF
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-next
  namespace: next-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-next
  template:
    metadata:
      labels:
        app: hello-next
    spec:
      containers:
      - name: hello-app
        image: us-docker.pkg.dev/google-samples/containers/gke/hello-app:1.0
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 200m
            memory: 200Mi
EOF

cat > test-service.yaml << EOF
apiVersion: v1
kind: Service
metadata:
  name: hello-next
  namespace: next-test
spec:
  type: ClusterIP
  selector:
    app: hello-next
  ports:
  - port: 80
    targetPort: 8080
EOF

# –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π
kubectl apply -f test-deployment.yaml
kubectl apply -f test-service.yaml

# –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è
echo -e "${YELLOW}–û—á—ñ–∫—É–≤–∞–Ω–Ω—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è...${NC}"
kubectl rollout status deployment/hello-next -n next-test

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —Å–µ—Ä–≤—ñ—Å—É
echo -e "${YELLOW}–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —Å–µ—Ä–≤—ñ—Å—É:${NC}"
kubectl port-forward service/hello-next 8080:80 &
PORT_FORWARD_PID=$!
sleep 3

# –ó–¥—ñ–π—Å–Ω–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—É –¥–æ —Å–µ—Ä–≤—ñ—Å—É
echo -e "${YELLOW}–ó–¥—ñ–π—Å–Ω–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—É –¥–æ —Å–µ—Ä–≤—ñ—Å—É:${NC}"
curl -s localhost:8080
if [ $? -eq 0 ]; then
  echo -e "\n${GREEN}‚úÖ –°–µ—Ä–≤—ñ—Å –ø—Ä–∞—Ü—é—î! –¢–µ—Å—Ç —É—Å–ø—ñ—à–Ω–∏–π!${NC}"
else
  echo -e "${RED}‚ùå –ù–µ–º–æ–∂–ª–∏–≤–æ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ —Å–µ—Ä–≤—ñ—Å—É.${NC}"
fi

# –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø–µ—Ä–µ—Å–ø—Ä—è–º—É–≤–∞–Ω–Ω—è –ø–æ—Ä—Ç—É
kill $PORT_FORWARD_PID 2>/dev/null

# –í–∏–≤–µ–¥–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
echo -e "${BLUE}=======================================================================================${NC}"
echo -e "${GREEN}‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è GKE –¥–ª—è Google Cloud Next 2025 –∑–∞–≤–µ—Ä—à–µ–Ω–æ${NC}"
echo -e "${GREEN}‚úÖ –ö–ª–∞—Å—Ç–µ—Ä: ${CLUSTER_NAME} —É —Ä–µ–≥—ñ–æ–Ω—ñ ${CLUSTER_REGION}${NC}"
echo -e "${GREEN}‚úÖ –¢–µ—Å—Ç–æ–≤–∏–π –¥–æ–¥–∞—Ç–æ–∫ —Ä–æ–∑–≥–æ—Ä–Ω—É—Ç–æ —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ —ñ–º–µ–Ω next-test${NC}"
echo -e "${BLUE}=======================================================================================${NC}"

echo -e "${YELLOW}–ë–∞–∂–∞—î—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ç–µ—Å—Ç–æ–≤—ñ —Ä–µ—Å—É—Ä—Å–∏? (y/n)${NC}"
read -p "> " cleanup_answer
if [[ "$cleanup_answer" =~ ^[Yy]$ ]]; then
  kubectl delete namespace next-test
  echo -e "${GREEN}–¢–µ—Å—Ç–æ–≤—ñ —Ä–µ—Å—É—Ä—Å–∏ –≤–∏–¥–∞–ª–µ–Ω–æ.${NC}"
else
  echo -e "${YELLOW}–¢–µ—Å—Ç–æ–≤—ñ —Ä–µ—Å—É—Ä—Å–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ —ñ–º–µ–Ω next-test.${NC}"
fi

echo -e "${GREEN}–ó–∞–≤–µ—Ä—à–µ–Ω–æ! –í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ —Ä–æ–±–æ—Ç—É Kubernetes —É Google Cloud Next 2025.${NC}"
